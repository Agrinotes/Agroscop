{% extends '::base_topbar.html.twig' %}

{% block title %}
Planning
{% endblock %}

{% block plugins_stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('remark/3.0.5/classic/global/vendor/fullcalendar/fullcalendar.css') }}">
    <link rel="stylesheet" href="{{ asset('remark/3.0.5/classic/global/vendor/fullcalendar/fullcalendar.print.css') }}" media="print">
    <link rel="stylesheet" href="{{ asset('remark/3.0.5/classic/global/vendor/select2/select2.css') }}">

    <link rel="stylesheet" href="{{ asset('remark/3.0.5/classic/global/vendor/bootstrap-datepicker/bootstrap-datepicker.css') }}">
    <link rel="stylesheet" href="{{ asset('remark/3.0.5/classic/global/vendor/bootstrap-touchspin/bootstrap-touchspin.css') }}">
    <link rel="stylesheet" href="{{ asset('remark/3.0.5/classic/global/vendor/jquery-selective/jquery-selective.css') }}">
    <link rel="stylesheet" href="{{ asset('remark/3.0.5/classic/topbar/assets/examples/css/apps/calendar.css') }}">
{% endblock %}


{% block body_class %}animsition site-navbar-small app-calendar page-aside-left{% endblock %}

{% block page %}
    <div class="page-main">
        <div class="calendar-container">
            <div id="calendar" ></div>
            <!--AddEvent Dialog -->
            <div class="modal fade" id="addNewEvent" aria-hidden="true" aria-labelledby="addNewEvent"
                 role="dialog" tabindex="-1">
                <div class="modal-dialog modal-lg modal-info">
                    <form class="modal-content form-horizontal" action="#" method="post" role="form">
                        <div class="modal-header">
                            <button type="button" class="close" aria-hidden="true" data-dismiss="modal">×</button>
                            <h4 class="modal-title">Ajouter une intervention</h4>
                        </div>
                        <div class="modal-body">
                            {{ render(controller('AppBundle:Action:newFromCalendar')) }}
                        </div>
                    </form>
                </div>
            </div>
            <!-- End AddEvent Dialog -->
            <!-- Edit Dialog -->
            <div class="modal fade" id="editNewEvent" aria-hidden="true" aria-labelledby="editNewEvent"
                 role="dialog" tabindex="-1" data-show="false">
                <div class="modal-dialog">
                    <form class="modal-content form-horizontal" action="#" method="post" role="form">
                        <div class="modal-header">
                            <button type="button" class="close" aria-hidden="true" data-dismiss="modal">×</button>
                            <h4 class="modal-title">Edit Event</h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group row">
                                <label class="col-xs-12 col-md-2 form-control-label" for="editEname">Name:</label>
                                <div class="col-xs-12 col-md-10">
                                    <input type="text" class="form-control" id="editEname" name="editEname">
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-xs-12 col-md-2 form-control-label" for="editStarts">Starts:</label>
                                <div class="col-xs-12 col-md-10">
                                    <div class="input-group">
                                        <input type="text" class="form-control" id="editStarts" name="editStarts" data-container="#editNewEvent"
                                               data-plugin="datepicker">
                      <span class="input-group-addon">
                        <i class="icon wb-calendar" aria-hidden="true"></i>
                      </span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-xs-12 col-md-2 form-control-label" for="editEnds">Ends:</label>
                                <div class="col-xs-12 col-md-10">
                                    <div class="input-group">
                                        <input type="text" class="form-control" id="editEnds" data-container="#editNewEvent"
                                               data-plugin="datepicker">
                      <span class="input-group-addon">
                        <i class="icon wb-calendar" aria-hidden="true"></i>
                      </span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-xs-12 col-md-2 form-control-label" for="editRepeats">Repeats:</label>
                                <div class="col-xs-12 col-md-10">
                                    <input type="text" class="form-control" id="editRepeats" name="repeats" data-plugin="TouchSpin"
                                           data-min="0" data-max="10" value="0" />
                                </div>
                            </div>
                            <div class="form-group row" id="editColor">
                                <label class="form-control-label col-xs-12 col-md-2">Color:</label>
                                <div class="col-xs-12 col-md-10">
                                    <ul class="color-selector">
                                        <li class="bg-blue-600">
                                            <input type="radio" data-color="blue|600" name="colorChosen" id="editColorChosen2">
                                            <label for="editColorChosen2"></label>
                                        </li>
                                        <li class="bg-green-600">
                                            <input type="radio" data-color="green|600" name="colorChosen" id="editColorChosen3">
                                            <label for="editColorChosen3"></label>
                                        </li>
                                        <li class="bg-cyan-600">
                                            <input type="radio" data-color="cyan|600" name="colorChosen" id="editColorChosen4">
                                            <label for="editColorChosen4"></label>
                                        </li>
                                        <li class="bg-orange-600">
                                            <input type="radio" data-color="orange|600" name="colorChosen" id="editColorChosen5">
                                            <label for="editColorChosen4"></label>
                                        </li>
                                        <li class="bg-red-600">
                                            <input type="radio" data-color="red|600" name="colorChosen" id="editColorChosen6">
                                            <label for="editColorChosen6"></label>
                                        </li>
                                        <li class="bg-blue-grey-600">
                                            <input type="radio" data-color="blue-grey|600" name="colorChosen" id="editColorChosen7">
                                            <label for="editColorChosen7"></label>
                                        </li>
                                        <li class="bg-purple-600">
                                            <input type="radio" data-color="purple|600" name="colorChosen" id="editColorChosen8">
                                            <label for="editColorChosen8"></label>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-xs-12 col-md-2 form-control-label" for="editPeople">People:</label>
                                <div class="col-xs-12 col-md-10">
                                    <select id="editPeople" multiple="multiple" class="plugin-selective"></select>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <div class="form-actions">
                                <button class="btn btn-primary" data-dismiss="modal" type="button">Save</button>
                                <button class="btn btn-danger" data-dismiss="modal" type="button">Delete</button>
                                <a class="btn btn-sm btn-white" data-dismiss="modal" href="javascript:void(0)">Cancel</a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <!-- End EditEvent Dialog -->
            <!--AddCalendar Dialog -->
            <div class="modal fade" id="addNewCalendar" aria-hidden="true" aria-labelledby="addNewCalendar"
                 role="dialog" tabindex="-1">
                <div class="modal-dialog">
                    <form class="modal-content form-horizontal" action="#" method="post" role="form">
                        <div class="modal-header">
                            <button type="button" class="close" aria-hidden="true" data-dismiss="modal">×</button>
                            <h4 class="modal-title">New Calendar</h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group row">
                                <label class="col-xs-12 col-md-2 form-control-label" for="ename">Name:</label>
                                <div class="col-xs-12 col-md-10">
                                    <input type="text" class="form-control" id="ename" name="ename">
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="form-control-label col-xs-12 col-md-2">Color:</label>
                                <div class="col-xs-12 col-md-10">
                                    <ul class="color-selector">
                                        <li class="bg-blue-600">
                                            <input type="radio" checked name="colorChosen" id="colorChosen2">
                                            <label for="colorChosen2"></label>
                                        </li>
                                        <li class="bg-green-600">
                                            <input type="radio" name="colorChosen" id="colorChosen3">
                                            <label for="colorChosen3"></label>
                                        </li>
                                        <li class="bg-cyan-600">
                                            <input type="radio" name="colorChosen" id="colorChosen4">
                                            <label for="colorChosen4"></label>
                                        </li>
                                        <li class="bg-orange-600">
                                            <input type="radio" name="colorChosen" id="colorChosen5">
                                            <label for="colorChosen5"></label>
                                        </li>
                                        <li class="bg-red-600">
                                            <input type="radio" name="colorChosen" id="colorChosen6">
                                            <label for="colorChosen6"></label>
                                        </li>
                                        <li class="bg-blue-grey-600">
                                            <input type="radio" name="colorChosen" id="colorChosen7">
                                            <label for="colorChosen7"></label>
                                        </li>
                                        <li class="bg-purple-600">
                                            <input type="radio" name="colorChosen" id="colorChosen8">
                                            <label for="colorChosen8"></label>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-xs-12 col-md-2 form-control-label" for="people">People:</label>
                                <div class="col-xs-12 col-md-10">
                                    <select id="people" multiple="multiple" class="plugin-selective"></select>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <div class="form-actions">
                                <button class="btn btn-primary" data-dismiss="modal" type="button">Create</button>
                                <a class="btn btn-sm btn-white" data-dismiss="modal" href="javascript:void(0)">Cancel</a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <!-- End AddCalendar Dialog -->
        </div>
        <!--AddEvent Dialog -->
        <div class="modal fade" id="addNewEvent" aria-hidden="true" aria-labelledby="addNewEvent"
             role="dialog" tabindex="-1">
            <div class="modal-dialog">
                {{ render(controller('AppBundle:Action:newFromCalendar')) }}

            </div>
        </div>
        <!-- End AddEvent Dialog -->
    </div>
{% endblock %}
{% block footer %}
<!-- Site Action -->
<div class="site-action" data-plugin="actionBtn">
    <button type="button" class="site-action-toggle btn-raised btn btn-danger btn-floating">
        <i class="front-icon wb-plus animation-scale-up" aria-hidden="true"></i>
        <i class="back-icon wb-delete animation-scale-up" aria-hidden="true"></i>
    </button>
</div>
<!-- End Site Action -->

{% endblock %}

{% block plugins_javascripts %}
    {{ parent() }}
    <script src="{{ asset('remark/3.0.5/classic/global/vendor/jquery-ui/jquery-ui.min.js') }}"></script>
    <script src="{{ asset('remark/3.0.5/classic/global/vendor/moment/moment.min.js') }}"></script>
    <script src="{{ asset('remark/3.0.5/classic/global/vendor/fullcalendar/fullcalendar.js') }}"></script>
    <script src="{{ asset('remark/3.0.5/classic/global/vendor/fullcalendar/locale/fr.js') }}"></script>

    <script src="{{ asset('remark/3.0.5/classic/global/vendor/jquery-selective/jquery-selective.min.js') }}"></script>
    <script src="{{ asset('remark/3.0.5/classic/global/vendor/bootstrap-touchspin/bootstrap-touchspin.min.js') }}"></script>
    <script src="{{ asset('remark/3.0.5/classic/global/vendor/bootbox/bootbox.js') }}"></script>

    <script src="{{ asset('remark/3.0.5/classic/global/vendor/select2/select2.min.js') }}"></script>
    {#<script src="{{ asset('remark/3.0.5/classic/global/js/Plugin/select2.js') }}"></script>#}

    <script src="{{ asset('front/global/vendor/bootstrap-datepicker/bootstrap-datepicker.js') }}"></script>
    <script src="{{ asset('front/global/vendor/bootstrap-datepicker/bootstrap-datepicker.fr.js') }}"></script>
    <script src="{{ asset('front/global/vendor/jt-timepicker/jquery.timepicker.js') }}"></script>
    <script src="{{ asset('front/global/vendor/datepair-js/datepair.min.js') }}"></script>
    <script src="{{ asset('front/global/vendor/datepair-js/jquery.datepair.min.js') }}"></script>
    <script src="{{ asset('front/global/vendor/asspinner/jquery-asSpinner.min.js') }}"></script>


    <script src="{{ asset('front/global/js/components/bootstrap-datepicker.js') }}"></script>
    <script src="{{ asset('front/global/js/components/jt-timepicker.js') }}"></script>
    <script src="{{ asset('front/global/js/components/datepair-js.js') }}"></script>
    <script src="{{ asset('front/global/js/components/asspinner.js') }}"></script>
{% endblock %}

{% block page_javascripts %}
    {{ parent() }}
    <script src="{{ asset('remark/3.0.5/classic/global/js/Plugin/bootstrap-touchspin.js') }}"></script>
    <script src="{{ asset('remark/3.0.5/classic/global/js/Plugin/bootstrap-datepicker.js') }}"></script>
    <script src="{{ asset('remark/3.0.5/classic/global/js/Plugin/material.js') }}"></script>
    <script src="{{ asset('remark/3.0.5/classic/global/js/Plugin/action-btn.js') }}"></script>
    <script src="{{ asset('remark/3.0.5/classic/global/js/Plugin/editlist.js') }}"></script>
    <script src="{{ asset('remark/3.0.5/classic/global/js/Plugin/bootbox.js') }}"></script>
    <script src="{{ asset('remark/3.0.5/classic/global/js/Plugin/bootbox.js') }}"></script>
    <script src="{{ asset('remark/3.0.5/classic/topbar/assets/js/Site.js') }}"></script>
    <script>
        (function (global, factory) {
            if (typeof define === "function" && define.amd) {
                define('/App/Calendar', ['exports', 'Site', 'Config'], factory);
            } else if (typeof exports !== "undefined") {
                factory(exports, require('Site'), require('Config'));
            } else {
                var mod = {
                    exports: {}
                };
                factory(mod.exports, global.Site, global.Config);
                global.AppCalendar = mod.exports;
            }
        })(this, function (exports, _Site2, _Config) {
            'use strict';

            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.getInstance = exports.run = exports.AppCalendar = undefined;

            var _Site3 = babelHelpers.interopRequireDefault(_Site2);

            var Config = babelHelpers.interopRequireWildcard(_Config);

            var AppCalendar = function (_Site) {
                babelHelpers.inherits(AppCalendar, _Site);

                function AppCalendar() {
                    babelHelpers.classCallCheck(this, AppCalendar);
                    return babelHelpers.possibleConstructorReturn(this, (AppCalendar.__proto__ || Object.getPrototypeOf(AppCalendar)).apply(this, arguments));
                }

                babelHelpers.createClass(AppCalendar, [{
                    key: 'processed',
                    value: function processed() {
                        babelHelpers.get(AppCalendar.prototype.__proto__ || Object.getPrototypeOf(AppCalendar.prototype), 'processed', this).call(this);

                        this.$actionToggleBtn = $('.site-action-toggle');
                        this.$addNewCalendarForm = $('#addNewCalendar').modal({
                            show: false
                        });

                        this.handleFullcalendar();
                        this.handleSelective();
                        this.handleAction();
                        this.handleListItem();
                        this.handleEventList();
                    }
                }, {
                    key: 'handleFullcalendar',
                    value: function handleFullcalendar() {
                        var myEvents = [
                            {% for action in actions %}
                            {
                            title: '{{ action.intervention.name }} sur {{ action.cropCycle.name }} @ {{ action.cropCycle.plot.name }} ',
                            start: '{{ action.startDatetime | date('Y-m-d\\TH:i:s') }}',
                            end: '{{ action.endDatetime | date('Y-m-d\\TH:i:s') }}',
                            backgroundColor: Config.colors('cyan', 600),
                            borderColor: Config.colors('cyan', 600)
                        }{% if not loop.last %},{% endif %}
                            {% endfor %}

                        ];

                        var myOptions = {
                            header: {
                                left: null,
                                center: 'prev,title,next',
                                right: 'month,agendaWeek,agendaDay,listMonth,listWeek'
                            },
                            defaultView:'listWeek',
                            height: 600,
                            locale: 'fr',
                            defaultDate: '{{ 'now' | date('Y-m-d') }}',
                            selectable: true,
                            selectHelper: true,
                            select: function select(start, end, jsEvent, view) {
                                $('#addNewEvent').modal('show');
                                $('#addNewEvent').on('shown.bs.modal', function (e) {
                                    $('.select2').select2({dropdownParent: $("#addNewEvent")});
                                    $('.select2-keep').select2({closeOnSelect: false});
                                });
                                // var allDay = !start.hasTime() && !end.hasTime();
                                // alert(["Event Start date: " + moment(start).format(),
                                //     "Event End date: " + moment(end).format(),
                                //    "AllDay: " + allDay].join("\n"));                            },
                            },
                            editable: true,
                            eventLimit: true,
                            windowResize: function windowResize(view) {
                                var width = $(window).outerWidth();
                                var options = Object.assign({}, myOptions);
                                options.events = view.calendar.getEventCache();
                                options.aspectRatio = width < 667 ? 0.5 : 1.35;

                                $('#calendar').fullCalendar('destroy');
                                $('#calendar').fullCalendar(options);
                            },
                            eventClick: function eventClick(event) {
                                var color = event.backgroundColor ? event.backgroundColor : Config.colors('blue', 600);
                                $('#editEname').val(event.title);

                                if (event.start) {
                                    $('#editStarts').datepicker('update', event.start._d);
                                } else {
                                    $('#editStarts').datepicker('update', '');
                                }
                                if (event.end) {
                                    $('#editEnds').datepicker('update', event.end._d);
                                } else {
                                    $('#editEnds').datepicker('update', '');
                                }

                                $('#editColor [type=radio]').each(function () {
                                    var $this = $(this),
                                            _value = $this.data('color').split('|'),
                                            value = Config.colors(_value[0], _value[1]);
                                    if (value === color) {
                                        $this.prop('checked', true);
                                    } else {
                                        $this.prop('checked', false);
                                    }
                                });

                                $('#editNewEvent').modal('show').one('hidden.bs.modal', function (e) {
                                    event.title = $('#editEname').val();

                                    var color = $('#editColor [type=radio]:checked').data('color').split('|');
                                    color = Config.colors(color[0], color[1]);
                                    event.backgroundColor = color;
                                    event.borderColor = color;

                                    event.start = new Date($('#editStarts').data('datepicker').getDate());
                                    event.end = new Date($('#editEnds').data('datepicker').getDate());
                                    $('#calendar').fullCalendar('updateEvent', event);
                                });
                            },
                            eventDragStart: function eventDragStart() {
                                $('.site-action').data('actionBtn').show();
                            },
                            eventDragStop: function eventDragStop() {
                                $('.site-action').data('actionBtn').hide();
                            },

                            events: myEvents,
                            droppable: false
                        };

                        var _options = void 0;
                        var myOptionsMobile = Object.assign({}, myOptions);

                        myOptionsMobile.aspectRatio = 0.5;
                        _options = $(window).outerWidth() < 667 ? myOptionsMobile : myOptions;

                        $('#editNewEvent').modal();
                        $('#calendar').fullCalendar(_options);
                    }
                }, {
                    key: 'handleSelective',
                    value: function handleSelective() {

                        var member = [{
                            id: 'uid_1',
                            name: 'Herman Beck',
                            avatar: '../../../../global/portraits/1.jpg'
                        }, {
                            id: 'uid_2',
                            name: 'Mary Adams',
                            avatar: '../../../../global/portraits/2.jpg'
                        }, {
                            id: 'uid_3',
                            name: 'Caleb Richards',
                            avatar: '../../../../global/portraits/3.jpg'
                        }, {
                            id: 'uid_4',
                            name: 'June Lane',
                            avatar: '../../../../global/portraits/4.jpg'
                        }];

                        var items = [{
                            id: 'uid_1',
                            name: 'Herman Beck',
                            avatar: '../../../../global/portraits/1.jpg'
                        }, {
                            id: 'uid_2',
                            name: 'Caleb Richards',
                            avatar: '../../../../global/portraits/2.jpg'
                        }];

                        $('.plugin-selective').selective({
                            namespace: 'addMember',
                            local: member,
                            selected: items,
                            buildFromHtml: false,
                            tpl: {
                                optionValue: function optionValue(data) {
                                    return data.id;
                                },
                                frame: function frame() {
                                    return '<div class="' + this.namespace + '">\n          ' + this.options.tpl.items.call(this) + '\n          <div class="' + this.namespace + '-trigger">\n          ' + this.options.tpl.triggerButton.call(this) + '\n          <div class="' + this.namespace + '-trigger-dropdown">\n          ' + this.options.tpl.list.call(this) + '\n          </div>\n          </div>\n          </div>';
                                },
                                triggerButton: function triggerButton() {
                                    return '<div class="' + this.namespace + '-trigger-button"><i class="wb-plus"></i></div>';
                                },
                                listItem: function listItem(data) {
                                    return '<li class="' + this.namespace + '-list-item"><img class="avatar" src="' + data.avatar + '">' + data.name + '</li>';
                                },
                                item: function item(data) {
                                    return '<li class="' + this.namespace + '-item"><img class="avatar" src="' + data.avatar + '" title="' + data.name + '">' + this.options.tpl.itemRemove.call(this) + '</li>';
                                },
                                itemRemove: function itemRemove() {
                                    return '<span class="' + this.namespace + '-remove"><i class="wb-minus-circle"></i></span>';
                                },
                                option: function option(data) {
                                    return '<option value="' + this.options.tpl.optionValue.call(this, data) + '">' + data.name + '</option>';
                                }
                            }
                        });
                    }
                }, {
                    key: 'handleAction',
                    value: function handleAction() {
                        var _this2 = this;

                        this.$actionToggleBtn.on('click', function (e) {
                            _this2.$addNewCalendarForm.modal('show');
                            e.stopPropagation();
                        });
                    }
                }, {
                    key: 'handleEventList',
                    value: function handleEventList() {
                        $('#addNewEventBtn').on('click', function () {
                            $('#addNewEvent').modal('show');
                        });

                        $('.calendar-list .calendar-event').each(function () {
                            var $this = $(this),
                                    color = $this.data('color').split('-');
                            $this.data('event', {
                                title: $this.data('title'),
                                stick: $this.data('stick'),
                                backgroundColor: Config.colors(color[0], color[1]),
                                borderColor: Config.colors(color[0], color[1])
                            });
                            $this.draggable({
                                zIndex: 999,
                                revert: true,
                                revertDuration: 0,
                                appendTo: '.page',
                                helper: function helper() {
                                    return '<a class="fc-day-grid-event fc-event fc-start fc-end" style="background-color:' + Config.colors(color[0], color[1]) + ';border-color:' + Config.colors(color[0], color[1]) + '">\n          <div class="fc-content">\n            <span class="fc-title">' + $this.data('title') + '</span>\n          </div>\n          </a>';
                                }
                            });
                        });
                    }
                }, {
                    key: 'handleListItem',
                    value: function handleListItem() {
                        this.$actionToggleBtn.on('click', function (e) {
                            $('#addNewCalendar').modal('show');
                            e.stopPropagation();
                        });

                        $(document).on('click', '[data-tag=list-delete]', function (e) {
                            bootbox.dialog({
                                message: 'Do you want to delete the calendar?',
                                buttons: {
                                    success: {
                                        label: 'Delete',
                                        className: 'btn-danger',
                                        callback: function callback() {
                                            // $(e.target).closest('.list-group-item').remove();
                                        }
                                    }
                                }
                            });
                        });
                    }
                }]);
                return AppCalendar;
            }(_Site3.default);

            var instance = null;

            function getInstance() {
                if (!instance) {
                    instance = new AppCalendar();
                }
                return instance;
            }

            function run() {
                var app = getInstance();
                app.run();
            }

            exports.default = AppCalendar;
            exports.AppCalendar = AppCalendar;
            exports.run = run;
            exports.getInstance = getInstance;
        });

        $(document).ready(function() {
            AppCalendar.run();
        });
    </script>

    {{ include('@AppBundle/Resources/public/js/addActionFromCropCycleShow.js') }}



{% endblock %}
