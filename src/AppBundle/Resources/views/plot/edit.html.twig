{% extends 'base_topbar.html.twig' %}

{% block title %}Modifier {{ plot.name | capitalize }}{% endblock %}

{% block plugins_stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('front/global/vendor/asrange/asRange.css') }}">
{% endblock %}

{% block page_stylesheets %}
    {{ parent() }}
    <style>
        .leaflet-popup-tip-container {
            left: -35px;
        }

        .leaflet-control-layers-toggle {
            font-family: Roboto, sans-serif;
        }

        .leaflet-editing-icon {
            border-radius: 100%;
            opacity: 1;
        }

        .created-div {
            border: 10px solid #088;
            -webkit-border-radius: 30px;
            -moz-border-radius: 30px;
            border-radius: 30px;
            height: 20px;
            width: 20px;
            -webkit-animation: hugo 0.5s;
            -moz-animation: hugo 0.5s;
            animation: hugo 0.5s;
            transform-origin: center;
            /*opacity: 0.0*/
        }

        @keyframes hugo {
            from {
                transform: scale(3);
            }
            to {
                transform: none;
            }
        }

        .rangeUi-tip{
            width:auto;
            font-size:15px;
        }

        .hidden{
            display: none;
        }
    </style>
{% endblock %}

{% block page %}
    <div class="page-content">
        <div class="row">
            {% if plot.latLngs is empty %}
                <div class="col-lg-4 col-md-3 col-sm-0">
                </div>
            {% endif %}
            <div class="col-lg-4 col-md-6 col-sm-12">
                <!-- Panel -->
                <div class="panel panel-info panel-bordered">
                    <header class="panel-heading">
                        <div class="panel-actions"></div>
                        <h3 class="panel-title">{{ plot.name }}</h3>
                    </header>
                    <div class="panel-body" style="padding-bottom: 0px;">
                        {{ form_start(edit_form) }}
                        <div class="form-group">
                            {{ form_label(edit_form.name) }}
                            {{ form_errors(edit_form.name) }}
                            {{ form_widget(edit_form.name) }}
                        </div>

                        <div class="form-group">

                            <div class="checkbox-custom checkbox-info">
                                {{ form_widget(edit_form.hydroponics) }}
                                {{ form_label(edit_form.hydroponics) }}
                            </div>
                        </div>

                        <div class="form-group {% if plot.latLngs is not empty %}hidden{% endif %}">

                            {{ form_errors(edit_form.area) }}
                            {{ form_label(edit_form.area) }}
                            {{ form_widget(edit_form.area) }}
                        </div>
                        <div class="form-group hidden">
                            {{ form_label(edit_form.latLngs) }}
                            {{ form_errors(edit_form.latLngs) }}
                            {{ form_widget(edit_form.latLngs) }}
                        </div>
                    </div>
                    <div class="panel-footer">
                        <button class="btn btn-info btn-block margin-left-10" type="submit">Enregistrer</button>
                        {{ form_end(edit_form) }}

                        {{ form_start(delete_form) }}
                        <input type="submit" class="btn btn-danger btn-block margin-left-10" style="margin-top:10px;" value="Supprimer cette parcelle">
                        {{ form_end(delete_form) }}

                    </div>
                </div>
                <!-- End Panel -->
            </div>
            {% if plot.latLngs is not empty %}
                <div class="col-lg-8 col-md-6 col-sm-12">
                    <div id="map" style="height: 78vh;">
                    </div>
                </div>
            {% endif %}
        </div>
    </div>
{% endblock %}

{% block plugins_javascripts %}
    {{ parent()}}
    <script src="{{ asset('remark/3.0.5/classic/global/vendor/select2/select2.full.min.js') }}"></script>
    <script src="{{ asset('front/global/vendor/leaflet-snap/leaflet.snap.js') }}"></script> {# Change source #}
    <script src="{{ asset('front/global/vendor/bootstrap-sweetalert/sweet-alert.js') }}"></script> {# Change source #}
    <script src="{{ asset('remark/3.0.5/classic/global/vendor/asrange/jquery-asRange.min.js') }}"></script>

{% endblock %}

{% block page_javascripts %}
    {{ parent() }}
    <script src="{{ asset('remark/3.0.5/classic/topbar/assets/js/Site.js') }}"></script>
    <script src="{{ asset('remark/3.0.5/classic/global/js/Plugin/asrange.js') }}"></script>

    {# Map script #}
    <script>
        L.mapbox.accessToken = 'pk.eyJ1IjoiaHVnb2xlaG91eCIsImEiOiItOHl6Sm5jIn0.12l_k0K_Z28UE-Jc0kDgpw';
        var map = L.mapbox.map('map','mapbox.streets',{ zoomControl: false }).setView([20,150], 2);
        new L.Control.Zoom({ position: 'topright' }).addTo(map);
        L.control.layers({
            'Carte': L.mapbox.tileLayer('mapbox.streets').addTo(map),
            'Google Satellite': L.tileLayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}',{
                maxZoom: 20,
                subdomains:['mt0','mt1','mt2','mt3']
            }),
            'Google Street': L.tileLayer('http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}',{
                maxZoom: 20,
                subdomains:['mt0','mt1','mt2','mt3']
            }),
            'Image satellite Mapbox': L.mapbox.tileLayer('mapbox.streets-satellite'),
        }).addTo(map);


        var featureGroup = L.geoJson({{ plot.latLngs | raw }},
                {
                    color: "#088",
                    opacity: 0.8,
                    weight: 1.5
                }
        ).addTo(map);

        var bounds= featureGroup.getBounds()
        map.fitBounds(bounds);

        // Change icon styles
        L.Edit.Poly = L.Edit.Poly.extend({
            options: {
                icon: new L.DivIcon({
                    iconSize: new L.Point(20, 20),
                    className: 'leaflet-div-icon leaflet-editing-icon my-own-icon',
                    html: '<div class="inside-div"></div>'
                })
            }
        });
        // Enable drawing polygons
        var drawControl = new L.Control.Draw({
            edit: {
                featureGroup: featureGroup,
                remove: false,
                selectedPathOptions: {
                    dashArray: "8,6",
                    color: '#088',
                    opacity: 0.8,
                    weight: 1.5
                }
            },
            draw: {
                polyline: false,
                circle: false,
                marker: false,
                rectangle: false,
                polygon: {
                    icon: new L.DivIcon({
                        iconSize: new L.Point(20, 20),
                        className: 'leaflet-div-icon leaflet-editing-icon my-own-icon',
                        html: '<div class="created-div"></div>'
                    }),
                    shapeOptions: {
                        dashArray: "8,6",
                        color: '#088',
                        opacity: 0.8,
                        weight: 1.5
                    }
                }
            }
        }).addTo(map);
        // Change Leaflet draw messages
        L.drawLocal = {
            draw: {
                toolbar: {
                    actions: {
                        title: 'Annulez le dessin',
                        text: 'Annuler'
                    },
                    buttons: {
                        polyline: 'Dessiner une polyligne',
                        polygon: 'Dessiner ma zone de culture',
                        rectangle: 'Dessiner un rectangle',
                        circle: 'Dessiner un cercle',
                        marker: 'Dessiner un marqueur'
                    }
                },
                handlers: {
                    circle: {
                        tooltip: {
                            start: 'Cliquez et déplacez pour dessiner un cercle.'
                        }
                    },
                    marker: {
                        tooltip: {
                            start: 'Cliquez sur la carte pour placer un marqueur.'
                        }
                    },
                    polygon: {
                        tooltip: {
                            start: 'Vous pouvez commencer à dessiner votre zone de culture.',
                            cont: 'Vous pouvez continuer à dessiner votre zone de culture',
                            end: 'Cliquez sur votre premier point quand vous avez terminé.'
                        }
                    },
                    polyline: {
                        error: '<strong>Erreur:</strong> Les arrêtes de la forme ne doivent pas se croiser!',
                        tooltip: {
                            start: 'Cliquez pour commencer à dessiner d\'une ligne.',
                            cont: 'Cliquez pour continuer à dessiner une ligne.',
                            end: 'Cliquez sur le dernier point pour terminer la ligne.'
                        }
                    },
                    rectangle: {
                        tooltip: {
                            start: 'Cliquez et déplacez pour dessiner un rectangle.'
                        }
                    },
                    simpleshape: {
                        tooltip: {
                            end: 'Relachez la souris pour finir de dessiner.'
                        }
                    }
                }
            },
            edit: {
                toolbar: {
                    actions: {
                        save: {
                            title: 'Enregistrer les changements.',
                            text: 'Enregistrer'
                        },
                        cancel: {
                            title: 'Annuler les modifications.',
                            text: 'Annuler'
                        }
                    },
                    buttons: {
                        edit: 'Modifier la zone de culture.',
                        editDisabled: 'Aucune zone de culture à modifier.',
                        remove: 'Supprimer la zone de culture.',
                        removeDisabled: 'Aucune zone de culture à supprimer.'
                    }
                },
                handlers: {
                    edit: {
                        tooltip: {
                            text: 'Déplacez les points pour modifier la zone de culture.',
                            subtext: ''
                        }
                    },
                    remove: {
                        tooltip: {
                            text: 'Cliquez sur la zone de culture à supprimer'
                        }
                    }
                }
            }
        };


        // On draw created, add polygon values to the form
        map.on('draw:created', function (e) {
            var layer = e.layer;
            featureGroup.clearLayers();

                featureGroup.addLayer(layer);
                $("#plot_edit_area").val(getPolygonArea(layer));
                var latLngs = JSON.stringify(layer.toGeoJSON());
                $("#plot_edit_latLngs").val(latLngs);
                map.fitBounds(layer.getBounds());

        });

        // On draw edited, update polygon values to the form
        map.on('draw:edited', function (e) {
            e.layers.eachLayer(function (layer) {
                featureGroup.clearLayers();

                    featureGroup.addLayer(layer);
                    $("#plot_edit_area").val(getPolygonArea(layer));
                    var latLngs = JSON.stringify(layer.toGeoJSON());
                    $("#plot_edit_latLngs").val(latLngs);}
            );
        });


        // Get Polygon Area function
        function getPolygonArea(layer) {
            var area = LGeo.area(layer) / 10000;
            return area.toFixed(3);
        }

    </script>

{% endblock %}